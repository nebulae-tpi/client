
version: 2.1
jobs:
  build-frontend:    
    working_directory: /tmp
    docker:
      - image: circleci/node:10.15.3
        command: bash
    steps:
      - checkout:
          path: /tmp/repo
      - run:
          name: Installing ngular/cli and compile Angular project
          command: |     
            npm config set prefix '~/.npm-global'
            export PATH=~/.npm-global/bin:$PATH
            source ~/.profile                   
            npm install -g @angular/cli@7.3.5
            cd /tmp/repo/frontend/client
            echo PWA_CLIENT_ANGULAR_ENV_FILE: $PWA_CLIENT_ANGULAR_ENV_FILE
            echo PWA_CLIENT_ANGULAR_BASE_HREF: $PWA_CLIENT_ANGULAR_BASE_HREF

            if [ "$PWA_CLIENT_ANGULAR_ENV_FILE" != "environment.prod.ts" ]; then echo using /tmp/repo/frontend/client/src/environments/$PWA_CLIENT_ANGULAR_ENV_FILE; cp /tmp/repo/frontend/client/src/environments/$PWA_CLIENT_ANGULAR_ENV_FILE /tmp/repo/frontend/client/src/environments/environment.prod.ts; else echo "using original production env file"; fi
            sed -i "s|<base href=\"/\">|<base href=\"$PWA_CLIENT_ANGULAR_BASE_HREF\">|g" /tmp/repo/frontend/client/src/index.html
            npm i
            ng build --base-href "$PWA_CLIENT_ANGULAR_BASE_HREF" --prod
            ls /tmp/repo/frontend/client/dist
      - persist_to_workspace:
          root: /tmp/repo/frontend/client
          paths:
            - dist    
  build-docker:
    working_directory: /tmp
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout:
          path: /tmp/repo
      - setup_remote_docker
      - attach_workspace:
          # Must be absolute path or relative path from working_directory  
          at: /tmp
      - run:
          name:  push docker-hub
          command: |      
            ls /tmp/dist/ 
            export DOCKERHUB_NAMESPACE=$DOCKERHUB_NAMESPACE
            export DOCKERHUB_USER=$DOCKERHUB_USER
            export DOCKERHUB_PASS=$DOCKERHUB_PASS
            export FRONTEND_SHELL_PATH=/tmp/
            export PWA_CLIENT_NGINX_CONF_FILE=$PWA_CLIENT_NGINX_CONF_FILE
            cd /tmp/repo
            sh /tmp/repo/deployment/docker/build-docker-hub.sh
  deploy:
      working_directory: /tmp/workspace
      docker:
        - image: google/cloud-sdk:latest
      steps:
        - checkout
        - run:
            name: Setup gcloud & kubectl
            command: |
              echo $GCP_SERVICE_ACCOUNT_DEV | base64 --decode --ignore-garbage > /root/gcloud-service-key.json
              gcloud auth activate-service-account --key-file /root/gcloud-service-key.json            
              gcloud --quiet config set project $GKE_PROJECT_DEV
              gcloud --quiet config set compute/zone $GKE_ZONE_DEV
              gcloud --quiet container clusters get-credentials $GKE_CLUSTER
        - run:
            name: Deploy on Kubernetes
            command: |
              for xi in $(ls /tmp/workspace/deployment/gke/*.y*ml); do sed -i s/DOCKERHUB/$DOCKERHUB_NAMESPACE/ $xi ; done
              kubectl apply -f /tmp/workspace/deployment/gke/


workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - build-frontend:
          context: TPI
          filters:
            branches:
              only:
                - develop
      - build-docker:
          context: TPI
          requires:
            - build-frontend
          filters:
            branches:
              only:
                - develop
      - deploy:
          context: TPI
          requires:
            - build-docker
          filters:
            branches:
              only:
                - develop
      - build-frontend:
          context: TPI_PROD
          name: build-frontend-prod
          filters:
            branches:
              only:
                - master
      - build-docker:
          context: TPI_PROD
          name: build-docker-prod
          requires:
            - build-frontend-prod
          filters:
            branches:
              only:
                - master
      - deploy:
          context: TPI_PROD
          name: deploy-prod
          requires:
            - build-docker-prod
          filters:
            branches:
              only:
                - master